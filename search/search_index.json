{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>These are tutorials for the PIG-PARADIGM workshop on metagenomics, Apr 29th, 2024, given at Wageningen.</p> <p>Tutorials:</p> <ul> <li>Analyzing a single metagenome for taxonomy</li> <li>Comparing metagenomes</li> <li>Analyzing metagenomes for Antimicrobial Resistance (AMR)</li> </ul>"},{"location":"#tutorial-information","title":"Tutorial information","text":"<p>Data originally from the MIntO tutorial data.</p>"},{"location":"#more-information","title":"More information","text":"<p>Authors: Anneliek ter Horst and C. Titus Brown</p> <p>See the GitHub repo at ngs-docs/2024-pig-paradigm-workshop.</p>"},{"location":"amr/","title":"Analyzing metagenomes for Antimicrobial Resistance (AMR) Genes","text":"<p>We're going to use AMRFinderPlus, together with the megahit metagenome assembler and the prodigal gene finder, to look for antimicrobial resistance genes in the CD136 metagenome.</p> <p>We're going to do this by assembling the CD136 metagenome using the megahit assembler. This will give us contigs that represent the high coverage portion of the metagenome.</p>"},{"location":"amr/#install-amrfinder-megahit-and-prodigal","title":"Install amrfinder, megahit, and prodigal.","text":"<p>First, install the software. Run: <pre><code>mamba create -n amrfinder -y ncbi-amrfinderplus megahit prodigal csvtk matplotlib seaborn pandas\nconda activate amrfinder\n</code></pre></p> <p>Next, download the amrfinderplus database. Run: <pre><code>amrfinder -u\n</code></pre></p> <p>And, finally, set up &amp; change to a working directory. Run: <pre><code>mkdir ~/amr/\ncd ~/amr/\n</code></pre></p>"},{"location":"amr/#assemble-your-metagenome","title":"Assemble your metagenome:","text":"<p>We'll start by assembling the CD136 metagenome into contigs. In this case, we're not going to bin the contigs, because AMR genes don't assemble well, and in particular don't assemble into regions that are connected to their host genome. So we run the assembler, and look at genes on the resulting contigs.</p> <p>Run: <pre><code>megahit -1 ../data/IBD_tutorial_subset/metag/1-trimmed/CD136/CD136.1.paired.fq.gz \\\n    -2 ../data/IBD_tutorial_subset/metag/1-trimmed/CD136/CD136.2.paired.fq.gz \\\n    -o CD136.assembly.d\n</code></pre> This will take about 2 minutes, and produce (among other files) a set of assembled contigs in <code>CD136.assembly.d/final.contigs.fa</code>.</p> <p>Now, predict proteins in the assembled contigs using prodigal: <pre><code>prodigal -p meta -q -i CD136.assembly.d/final.contigs.fa -a CD136.assembly.faa\n</code></pre></p> <p>This will produce a FASTA file containing many protein sequences: <pre><code>head CD136.assembly.faa\n</code></pre> These are the (partial &amp; complete) genes found by the <code>prodigal</code> software.</p> <p>And, finally, run AMRfinder on the proteins: <pre><code>amrfinder -p CD136.assembly.faa -t 16 -o CD136.amrfinder.tsv --plus\n</code></pre> (This will take under a minute.)</p> <p>AMRfinder will produce a spreadsheet named <code>CD136.amrfinder.tsv</code> that contains a number of columns - you can see the list like so, using <code>csvtk headers</code>:</p> <pre><code>csvtk -t headers CD136.amrfinder.tsv\n</code></pre> <p>To pick out just a few columns, you can use <code>csvtk cut</code>.</p> <p>Run: <pre><code>csvtk -t cut -f \"% Coverage of reference sequence\",\"HMM description\" CD136.amrfinder.tsv \n</code></pre></p> <p>and you will see: <pre><code>% Coverage of reference sequence        HMM description\n89.41   CfxA family broad-spectrum class A beta-lactamase\n87.59   23S ribosomal RNA methyltransferase Erm\n52.84   NA\n100.00  macrolide efflux MFS transporter Mef(En2)\n100.00  lincosamide nucleotidyltransferase Lnu(AN2)\n100.00  CepA family extended-spectrum class A beta-lactamase\n</code></pre></p> <p>The first column here is the amount of the known (reference) sequence that is present in the metagenome, and the second is the description of the match.</p> <p>Note: If you wanted to get the abundance of these in the metagenome, you would have to find the DNA contig that the relevant gene was on, using the column \"Protein identifier\", and then map the metagenome reads to it to get the abundance. This is because assembly collapses the abundance of the output contigs, and you have to recover it through other means.</p> <p>Now we can plot the abundances of the AMRs we found: <pre><code>../scripts/plot_amr.py CD136.amrfinder.tsv -o CD136.amrfinder.pdf\n</code></pre> </p>"},{"location":"comparing-metagenomes/","title":"Comparing metagenomes","text":"<p>The tutorial uses sourmash to do comparisons of multiple metagenomes based on weighted and unweighted k-mer content.</p> <p>In this tutorial, you will learn how to create distance matrices and ordination plots from metagenome content. Importantly, this tutorial is reference and annotation free - it will work equally well on any metagenome.</p>"},{"location":"comparing-metagenomes/#first-create-a-conda-software-environment-and-a-working-directory","title":"First, create a conda software environment and a working directory.","text":"<p>To install the necessary software, run: <pre><code>mamba create -n smash -y sourmash scikit-learn\nconda activate smash\n</code></pre></p> <p>Then create a directory for this tutorial: <pre><code>mkdir ~/compare-metag\ncd ~/compare-metag\n</code></pre></p>"},{"location":"comparing-metagenomes/#comparing-based-on-content","title":"Comparing based on content","text":"<p>Here we are going to use the <code>sourmash compare</code> and <code>sourmash plot</code> commands to compare and cluster many metagenomes based on their content.</p> <p>As with the single metagenome analysis, we have two options here: with, or without abundance information.</p> <p>If we use abundance information, we will be comparing the genomic diversity of the data set.  In this kind of comparison, if two samples have the same dominant species, but many different species at lower abundances, the two samples will appear to be quite similar.</p> <p>If we discard abundance information and just focus on genomic content, we will be looking at richness. In this kind of comparison, samples with similar dominant species but many lower abundance species will look very different.</p>"},{"location":"comparing-metagenomes/#non-abundance-weighted-comparison-of-species-composition-richness","title":"Non abundance-weighted comparison of species composition &amp; richness","text":"<p>Let's first compare all of the samples without abundances, using only presence/absence of sequences.</p> <p>Run: <pre><code>sourmash compare ../data/tutorial_other/CD*.sig.zip \\\n    -o compare.flat.cmp -k 31 --ignore-abund\n</code></pre></p> <p>and then plot:</p> <p>Run: <pre><code>sourmash plot compare.flat.cmp\n</code></pre></p> <p>You will get a file <code>compare.flat.cmp.matrix.png</code> that looks like this:</p> <p></p> <p>Points to discuss:</p> <ul> <li>neither the distance matrix nor the dendrogram on the left show strong   signs of clustering.</li> </ul> <p>You can convert the distance matrix to an MDS plot where you will see that there is no clear clustering there either, of course (since it's a different view of the same data).</p> <p>Run: <pre><code>../scripts/ordinate.py compare.flat.cmp -o compare.flat.mds.png\n</code></pre></p> <p></p>"},{"location":"comparing-metagenomes/#abundance-weighted-comparison-of-diveristy","title":"Abundance-weighted comparison of diveristy","text":"<p>Now let's compare the samples using content abundance. This uses the cosine similarity between the abundance vectors of the sequences, rather than just the presence/absence vector.</p> <p>Run: <pre><code>sourmash compare ../data/tutorial_other/CD*.sig.zip \\\n    -o compare.abund.cmp -k 31\n</code></pre></p> <p>And then plot.</p> <p>Run: <pre><code>sourmash plot compare.abund.cmp\n</code></pre></p> <p>and you will see the following, in a file <code>compare.abund.cmp.matrix.png</code>.</p> <p></p> <p>Points to discuss:</p> <ul> <li>unlike the previous figures, here we see a clear set of clustering that   corresponds to sample origin.</li> </ul> <p>If you plot this via MDS, you'll see a clear separation:</p> <pre><code>../scripts/ordinate.py compare.abund.cmp -o compare.abund.mds.png\n</code></pre> <p></p> <p>Points to discuss:</p> <ul> <li>what does this all mean, in ~microbial terms? Hint: ask Mani to   revist how the test data sets were generated! Alternatively,   go on to the next section!</li> </ul>"},{"location":"comparing-metagenomes/#extra-examining-taxonomy","title":"Extra: examining taxonomy","text":"<p>If we quickly run our taxonomy analysis on one of the other samples, we can maybe start to see some of the reasons for the differences in diversity but not richness:</p> <pre><code>mamba activate tax\n\nsourmash scripts fastgather ../data/tutorial_other/CD240.sig.zip \\\n    ../databases/gtdb-rs214-k31.zip -o CD240.x.gtdb-rs214.fastgather.csv -c 16\n\nsourmash gather ../data/tutorial_other/CD240.sig.zip \\\n    ../databases/gtdb-rs214-k31.zip -o CD240.x.gtdb-rs214.gather.csv \\\n    --picklist CD240.x.gtdb-rs214.fastgather.csv:match_name:ident\n\nsourmash tax metagenome -g CD240.x.gtdb-rs214.gather.csv \\\n    -t ../single-metag/gtdb-rs214.lineages.sqldb -F human\n</code></pre> <p>You should see: <pre><code>sample name    proportion   cANI   lineage\n-----------    ----------   ----   -------\nCD240             42.2%     94.0%  d__Bacteria;p__Bacteroidota;c__Bacteroidia;o__Bacteroidales;f__Bacteroidaceae;g__Bacteroides;s__Bacteroides uniformis\nCD240             19.5%     94.5%  d__Bacteria;p__Bacteroidota;c__Bacteroidia;o__Bacteroidales;f__Bacteroidaceae;g__Bacteroides;s__Bacteroides fragilis\nCD240             12.6%     94.1%  d__Bacteria;p__Bacteroidota;c__Bacteroidia;o__Bacteroidales;f__Tannerellaceae;g__Parabacteroides;s__Parabacteroides distasonis\nCD240             11.7%     91.2%  d__Bacteria;p__Bacillota_A;c__Clostridia;o__Oscillospirales;f__Acutalibacteraceae;g__Ruminococcus_E;s__Ruminococcus_E bromii_B\nCD240             11.4%     -      unclassified\nCD240              2.6%     91.4%  d__Bacteria;p__Bacillota_A;c__Clostridia;o__Oscillospirales;f__Ruminococcaceae;g__Faecalibacterium;s__Faecalibacterium prausnitzii_D\n</code></pre></p> <p>That's right - both samples have similar species, but the abundances of those species are quite different.</p> <p>Note that in this case that's not an accident: the dataset was created specifically to contain only five species ;).</p> <p>Next tutorial: Analyzing metagenomes for Antimicrobial Resistance Genes</p>"},{"location":"single-metagenomes-taxonomy/","title":"Analyzing a single metagenome for taxonomy","text":"<p>The tutorial uses sourmash to do various k-mer based analyses of Illumina shotgun metagenome content.</p> <p>In this tutorial, you will learn:</p> <ul> <li>how to look at what genomes share content with a metagenome;</li> <li>how to examine the abundance of metagenome content without a reference;</li> <li>how to summarize the taxonomic content of a metagenome;</li> </ul> <p>We will be using the taxonomic classification system as benchmarked in Evaluation of taxonomic classification and profiling methods for long-read shotgun metagenomic sequencing datasets, which is both very sensitive and quite specific.</p>"},{"location":"single-metagenomes-taxonomy/#creating-a-working-directory","title":"Creating a working directory","text":"<p>Run: <pre><code>mkdir ~/single-metag/\ncd ~/single-metag/\n</code></pre></p>"},{"location":"single-metagenomes-taxonomy/#installation","title":"Installation","text":"<p>First let's install the necessary software. We'll be using the sourmash software along with a few sourmash plugins.</p> <pre><code>mamba create -n tax -y sourmash sourmash_plugin_branchwater\nconda activate tax\npip install sourmash_plugin_abundhist sourmash_plugin_venn\n</code></pre>"},{"location":"single-metagenomes-taxonomy/#basic-membership-analysis-of-the-metagenome","title":"Basic membership analysis of the metagenome","text":"<p>Now let's convert the CD136 metagenome into sourmash sketch format (docs):</p> <pre><code>sourmash sketch dna -p abund \\\n    ../data/IBD_tutorial_subset/metag/1-trimmed/CD136/*.fq.gz \\\n    --name CD136 -o CD136.sig.zip\n</code></pre> <p>And search it against the latest Genome Taxonomy Database (GTDB) containing all known genomes. We'll do the primary search with the 'fastgather' extension to sourmash.</p> <p>Run: <pre><code>sourmash scripts fastgather CD136.sig.zip \\\n    ../databases/gtdb-rs214-k31.zip -o CD136.x.gtdb-rs214.fastgather.csv -c 16\n</code></pre> (This will take about 3 minutes.)</p> <p>Display the results of the first search in a nicer format using 'sourmash gather' (docs.</p> <p>Run: <pre><code>sourmash gather CD136.sig.zip \\\n    ../databases/gtdb-rs214-k31.zip -o CD136.x.gtdb-rs214.gather.csv \\\n    --picklist CD136.x.gtdb-rs214.fastgather.csv:match_name:ident\n</code></pre></p> <p>You should see the output below. What does this mean? <pre><code>overlap     p_query p_match avg_abund\n---------   ------- ------- ---------\n5.0 Mbp       27.5%   96.7%       7.3    GCF_000598785.2 Bacteroides fragilis...\n3.6 Mbp       10.3%   64.2%       3.8    GCF_009678525.1 Parabacteroides dist...\n3.2 Mbp        4.6%   59.0%       1.9    GCF_015550345.1 Bacteroides uniformi...\n1.6 Mbp       30.7%   58.4%      25.3    GCA_023708525.1 Faecalibacterium pra...\n3.6 Mbp        1.2%    8.0%       3.8    GCF_009024595.1 Parabacteroides dist...\n1.6 Mbp        5.6%   10.2%      25.1    GCF_017377615.1 Faecalibacterium sp....\n2.6 Mbp        0.5%    3.3%       3.7    GCF_015548395.1 Parabacteroides dist...\n1.6 Mbp        2.3%    5.1%      24.6    GCA_905199165.1 Faecalibacterium pra...\n3.5 Mbp        0.2%    1.9%       2.8    GCA_009678725.1 Parabacteroides dist...\n2.1 Mbp        0.1%    1.5%       1.9    GCF_009020375.1 Bacteroides uniformi...\n3.3 Mbp        0.2%    1.5%       3.6    GCF_015552355.1 Parabacteroides dist...\n1.6 Mbp        1.4%    2.4%      25.2    GCF_000166035.1 Faecalibacterium cf....\n4.0 Mbp        0.3%    1.1%       7.3    GCF_009024655.1 Bacteroides fragilis...\n1.6 Mbp        1.0%    1.9%      25.3    GCA_019425405.1 Faecalibacterium sp....\nfound less than 50.0 kbp in common. =&gt; exiting\n\nfound 14 matches total;\nthe recovered matches hit 86.0% of the abundance-weighted query.\nthe recovered matches hit 61.7% of the query k-mers (unweighted).\n</code></pre></p> <p>Points to discuss:</p> <ul> <li>13 matches were found! This means that significant portions of 13   different GenBank genomes matched to some part of the metagenome.</li> <li>based on the abundance-weighted matches, 86.0% of the metagenome   reads will map to at least one of these genomes. This means that   at least 86% of the metagenome content is known!</li> <li>based on the unweighted matches, 61.7% of the metagenome's genomic   content is present in the reference database.  Some of this is   probably erroneous data or host contamination.</li> </ul>"},{"location":"single-metagenomes-taxonomy/#k-mer-abundance-histogram","title":"K-mer abundance histogram","text":"<p>Let's examine this data set further. First, let's take a look at the abundance spectrum of the metagenome content. This is an annotation and reference-free exercise: we're just counting content.</p> <p>Run the abundhist plugin: <pre><code>sourmash scripts abundhist CD136.sig.zip \\\n    --max 50 --bins 20 --figure CD136-abundance.png \\\n    --ymax 4000\n</code></pre> This will produce a file <code>CD136-abundance.png</code>, which will look approximately like this:</p> <p>)</p> <p>Points to discuss:</p> <ul> <li>this is a histogram of sequence content, separated by abundance.</li> <li>the X axis is the abundance, the Y axis is how much of the content is at   that abundance.</li> <li>you would expect a peak for each species present.</li> <li>for this simple mock metagenome, there are two peaks: one under 10, one around 30.</li> <li>we do not know what these species are based on this diagram, but we can annotate them based on the avg_abund column in the sourmash gather output above.</li> </ul>"},{"location":"single-metagenomes-taxonomy/#k-mer-overlap-between-metagenomes-and-two-genomes","title":"K-mer overlap between metagenomes and two genomes","text":"<p>Now, since (based on the gather output and the abundance histogram) we think there are two major species, let's take a look at the overlap of genomes of these species with the entire metagenome.</p> <p>We do this with the Venn plugin. But first we need to extract and rename the matches we're interested in comparing:</p> <p>Run: <pre><code>sourmash sig grep \"GCF_000598785.2\" ../databases/gtdb-rs214-k31.zip \\\n    -o GCF_000598785.2.sig.zip\nsourmash sig grep \"GCA_023708525.1\" ../databases/gtdb-rs214-k31.zip \\\n    -o GCA_023708525.1.sig.zip\n\nsourmash sig rename GCF_000598785.2.sig.zip \"B. fragilis I1345\" \\\n    -o B.fragilis.sig.zip\nsourmash sig rename GCA_023708525.1.sig.zip \"F. prausnitzii\" \\\n    -o F.prausnitzii.sig.zip\n</code></pre></p> <p>And now generate a 3-way Venn diagram: <pre><code>sourmash scripts venn -k 31 CD136.sig.zip B.fragilis.sig.zip \\\n    F.prausnitzii.sig.zip -o CD136-venn.png\n</code></pre></p> <p>In the resulting figure <code>CD136-venn.png</code> (see below), multiply numbers by 1000 to get number of bases. CD136 (the red circle) is the entire metagenome.</p> <p></p> <p>Points to discuss:</p> <ul> <li>the metagenome CD136 contains a mixture of content from whatever   genomes are present.</li> <li>based on the gather output, we can see two major species (also see   taxonomy results below): B. fragilis and F. prausnitzii.</li> <li>This Venn diagram illustrates their genomic overlap with the k-mer   content of the metagenome. This is not weighted by abundance: the size   of the circles is relative to the genome size.</li> <li>We can see that the B. fragilis I135 genome is almost entirely   contained in the metagenome. Based on the p_match column from the gather   output above, it is 96.7% present in the metagenome!</li> <li>In contrast, the F. prausnitzii genome is just a bit more than half   contained in the metagenome (p_match is </li> </ul> <p>Questions to ask:</p> <ul> <li>why are these genomes not entirely present (100% overlap)?<ul> <li>low coverage</li> <li>strain variation</li> </ul> </li> <li>what ELSE might be in the metagenome??<ul> <li>contamination</li> <li>unknown genomes (see morning session)</li> </ul> </li> </ul>"},{"location":"single-metagenomes-taxonomy/#summarizing-taxonomy","title":"Summarizing taxonomy","text":"<p>Prepare the taxonomic lineages file so that the commands run fast.</p> <p>Run: <pre><code>sourmash tax prepare -t ../databases/gtdb-rs214.lineages.csv.gz \\\n    -F sql -o gtdb-rs214.lineages.sqldb\n</code></pre></p> <p>Now let's generate a human-readable taxonomic analysis at the species level. This uses the GTDB taxonomic lineages to summarize all of the gather matches at the species level.</p> <p>Run: <pre><code>sourmash tax metagenome -g CD136.x.gtdb-rs214.gather.csv \\\n    -t gtdb-rs214.lineages.sqldb -F human\n</code></pre></p> <p>You will see: <pre><code>sample name    proportion   cANI   lineage\n-----------    ----------   ----   -------\nCD136             41.0%     92.5%  d__Bacteria;p__Bacillota_A;c__Clostridia;o__Oscillospirales;f__Ruminococcaceae;g__Faecalibacterium;s__Faecalibacterium prausnitzii_D\nCD136             27.8%     95.1%  d__Bacteria;p__Bacteroidota;c__Bacteroidia;o__Bacteroidales;f__Bacteroidaceae;g__Bacteroides;s__Bacteroides fragilis\nCD136             14.1%     -      unclassified\nCD136             12.4%     94.7%  d__Bacteria;p__Bacteroidota;c__Bacteroidia;o__Bacteroidales;f__Tannerellaceae;g__Parabacteroides;s__Parabacteroides distasonis\nCD136              4.6%     93.7%  d__Bacteria;p__Bacteroidota;c__Bacteroidia;o__Bacteroidales;f__Bacteroidaceae;g__Bacteroides;s__Bacteroides uniformis\n</code></pre></p> <p>we can also roll this up from species to other taxonomic ranks, like class, by adding <code>-r &lt;rank&gt;</code>.</p> <p>Run: <pre><code>sourmash tax metagenome -g CD136.x.gtdb-rs214.gather.csv \\\n    -t gtdb-rs214.lineages.sqldb  -F human -r class\n</code></pre></p> <p>and you will get the above results \"pulled back\" to class: <pre><code>sample name    proportion   cANI   lineage\n-----------    ----------   ----   -------\nCD136             44.9%     98.0%  d__Bacteria;p__Bacteroidota;c__Bacteroidia\nCD136             41.0%     92.5%  d__Bacteria;p__Bacillota_A;c__Clostridia\nCD136             14.1%     -      unclassified\n</code></pre></p> <p>Points to discuss:</p> <ul> <li>what is the \"unclassified\" content?</li> <li>what is cANI? (what is ANI!)</li> </ul> <p>Things for students to try out:</p> <ul> <li>Try executing the commands for different ranks - genus, family,   order, class, phylum, superkingdom. Do the results make sense?</li> </ul> <p>Next tutorial: Comparing metagenomes</p>"}]}